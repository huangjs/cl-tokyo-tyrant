(in-package "TOKYO-TYRANT")

(defvar *test-table-data* 
    `(("1"  . ,(alist-to-hash-table '(("name"   . "空条承太郎")
                                      ("sex"    . "male")
                                      ("hdate"  . "20050321")
                                      ("div"    . "brd,dev"))
                                    :test 'equal))
      ("81"  . ,(alist-to-hash-table '(("name"  . "東方仗助")
                                      ("sex"    . "male")
                                      ("hdate"  . "20060601")
                                      ("div"    . "dev"))
                                     :test 'equal))
      ("92"  . ,(alist-to-hash-table '(("name"  . "汐華初流乃")
                                      ("sex"    . "male")
                                      ("hdate"  . "20070311")
                                      ("div"    . "hr" ))
                                     :test 'equal))
      ("127" . ,(alist-to-hash-table '(("name"  . "空条徐倫")
                                       ("sex"   . "female")
                                       ("hdate" . "20070523")
                                       ("div"   . "brd,hr"))
                                     :test 'equal))))

(defun test-0 (host port)
  (let ((tbl (make-instance 'RDBTBL)))
    (tt-open tbl host port)
    (tt-setindex tbl "name" *ITLEXICAL*)
    (loop for (k . v) in *test-table-data*
        do (tt-put tbl k v))
    (let ((qry (make-instance 'RDBQRY)))
      (tt-qry-initialize qry tbl)
      (tt-qry-addcond qry "name" *QCSTRBW* "空条")
      (tt-qry-setorder qry "hdate" *QONUMDESC*)
      (prog1
          (let ((result (tt-qry-search qry)))
            (loop for key in result
                collect (hash-table-to-key-value-list (tt-get tbl key))))
        (tt-close tbl)))))
